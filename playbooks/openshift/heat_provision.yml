---
- hosts: localhost
  gather_facts: no
  connection: local
  tasks:
    - block:
      - name: Build the OpenShift Heat stack (full)
        register: heat_stack
        os_stack:
          name: "{{ cluster_name }}"
          state: present
          template: "files/openshift-heat-stack.yml"
          wait: yes
          parameters:
            env_name: "{{ cluster_name }}"
            bastion_allow_cidrs: "{{ bastion_allow_cidrs }}"
            secgroup_ext_access_rules: "{{ secgroup_ext_access_rules }}"
            openshift_network_cidr: "{{ openshift_network_cidr }}"
            openshift_router: "{{ openshift_router }}"
            key_name: "{{ key_name }}"
            bastion_vm_image: "{{ bastion_vm_image }}"
            bastion_vm_flavor: "{{ bastion_vm_flavor }}"
            bastion_cloud_config: "{{ bastion_cloud_config }}"
            etcd_vm_group_size: "{{ etcd_vm_group_size }}"
            etcd_vm_image: "{{ etcd_vm_image }}"
            etcd_vm_flavor: "{{ etcd_vm_flavor }}"
            lb_vm_group_size: "{{ lb_vm_group_size }}"
            lb_vm_image: "{{ lb_vm_image }}"
            lb_vm_flavor: "{{ lb_vm_flavor }}"
            lb_vol_size: "{{ lb_vol_size }}"
            nfs_vm_group_size: "{{ nfs_vm_group_size }}"
            nfs_vm_image: "{{ nfs_vm_image }}"
            nfs_vm_flavor: "{{ nfs_vm_flavor }}"
            nfs_vol_size: "{{ nfs_vol_size }}"
            master_vm_group_size: "{{ master_vm_group_size }}"
            master_vm_image: "{{ master_vm_image }}"
            master_vm_flavor: "{{ master_vm_flavor }}"
            node_ssd_vm_group_size: "{{ node_ssd_vm_group_size }}"
            node_ssd_vm_image: "{{ node_ssd_vm_image }}"
            node_ssd_vm_flavor: "{{ node_ssd_vm_flavor }}"
      - name: Associate floating IP with first LB node
        os_floating_ip:
          server: "{{ cluster_name }}-lb-0"
          floating_ip_address: "{{ openshift_public_ip }}"
      when: master_vm_group_size > 1
    - block:
      - name: Build the OpenShift Heat stack (minimal)
        register: heat_stack
        os_stack:
          name: "{{ cluster_name }}"
          state: present
          template: "files/openshift-heat-stack-minimal.yml"
          wait: yes
          parameters:
            env_name: "{{ cluster_name }}"
            bastion_allow_cidrs: "{{ bastion_allow_cidrs }}"
            secgroup_ext_access_rules: "{{ secgroup_ext_access_rules }}"
            openshift_network_cidr: "{{ openshift_network_cidr }}"
            openshift_router: "{{ openshift_router }}"
            key_name: "{{ key_name }}"
            bastion_vm_image: "{{ bastion_vm_image }}"
            bastion_vm_flavor: "{{ bastion_vm_flavor }}"
            bastion_cloud_config: "{{ bastion_cloud_config }}"
            master_vm_group_size: "{{ master_vm_group_size }}"
            master_vm_image: "{{ master_vm_image }}"
            master_vm_flavor: "{{ master_vm_flavor }}"
            master_vm_vol_size: "{{ master_vm_vol_size }}"
            node_ssd_vm_group_size: "{{ node_ssd_vm_group_size }}"
            node_ssd_vm_image: "{{ node_ssd_vm_image }}"
            node_ssd_vm_flavor: "{{ node_ssd_vm_flavor }}"
      - name: Associate floating IP with master
        os_floating_ip:
          server: "{{ cluster_name }}-master-0"
          floating_ip_address: "{{ openshift_public_ip }}"
      when: master_vm_group_size == 1
    - name: Associate floating IP with bastion host
      os_floating_ip:
        server: "{{ cluster_name }}-bastion"
        floating_ip_address: "{{ bastion_public_ip }}"
    - name: Refresh dynamic inventory
      meta: refresh_inventory
    - name: add global ssh config
      blockinfile:
        create: yes
        mode: '0600'
        dest: "/tmp/pac.ssh.config"
        block: |
          Host *
            ForwardAgent no
            GSSAPIAuthentication no
            StrictHostKeyChecking no
            UserKnownHostsFile /dev/null
        marker: "# {mark} ANSIBLE MANAGED BLOCK for global PAC options"
    - name: add ssh config entries for hosts
      blockinfile:
        create: yes
        mode: '0600'
        dest: "/tmp/pac.ssh.config"
        block: |
          Host {{ item }} {{ hostvars[item].ansible_ssh_host }}
              HostName {{ hostvars[item].ansible_ssh_host }}
              StrictHostKeyChecking no
              UserKnownHostsFile /dev/null
              ProxyCommand ssh -F /tmp/pac.ssh.config -q cloud-user@{{ bastion_public_ip }} nc %h %p
        marker: "# {mark} ANSIBLE MANAGED BLOCK {{ cluster_name }}: {{ item }}"
      when: item != "localhost"
      with_items: "{{ groups.all }}"

- name: Wait for SSH to work on the bastion
  hosts: localhost
  connection: local
  gather_facts: no
  tasks:
    - name: Wait for connectivity on port 22 on the bastion
      wait_for:
        host: "{{ bastion_public_ip }}"
        port: 22
        search_regex: "OpenSSH"
        delay: 5
        timeout: 900

- name: Install nmap-ncat on bastion if need be
  hosts: bastion
  gather_facts: no
  tasks:
    - name: Install nmap-ncat
      yum:
        name: nmap-ncat
        state: present

- name: Wait for SSH to work on all other hosts
  hosts: all
  gather_facts: no
  any_errors_fatal: yes
  tasks:
    - name: Wait for connectivity on port 22 on all other hosts
      wait_for:
        host: "{{ ansible_ssh_host }}"
        port: 22
        search_regex: "OpenSSH"
        delay: 5
        timeout: 300
      delegate_to: "{{ hostvars[groups['bastion'][0]]['ansible_ssh_host'] }}"
